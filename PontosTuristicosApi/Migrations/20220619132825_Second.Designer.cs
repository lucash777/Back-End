// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PontosTuristicosApi.Context;

namespace PontosTuristicosApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220619132825_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PontosTuristicosApi.Models.Ponto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("RuaReferencia")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Pontos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cidade = "Curitiba",
                            Descricao = "Cartão postal de Curitiba, flores típicas da Mata-Atlântica",
                            Estado = "PR",
                            Nome = "Jardim Botânico",
                            RuaReferencia = "Ostoja Ruguski"
                        },
                        new
                        {
                            Id = 2,
                            Cidade = "São Paulo",
                            Descricao = "Uma das principais avenidas de São Paulo, com um trecho de 3KM",
                            Estado = "SP",
                            Nome = "Avenida Paulista",
                            RuaReferencia = "Avenida Paulista"
                        },
                        new
                        {
                            Id = 3,
                            Cidade = "Rio de Janeiro",
                            Descricao = "Destino litorâneo mais epeciais do mundo",
                            Estado = "RJ",
                            Nome = "Praia de Copacabana",
                            RuaReferencia = "Copacabana Praia"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
